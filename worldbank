#Para filtrar columnas y filas el paquete dyplr es mas rapido y facil, necesita Rtools instalado
#Rtools instalado
install.packages("Rcpp")
install.packages("dplyr")
library(lmtest)
library(Rcpp)
library(dplyr)

##establecer el directorio en donde esta la carpeta de worldbank en mi caso es la sguiente
setwd('C://Users//Sala-C22//Downloads')

worldb<-data.frame(read.csv("WDI_Data.csv"))
worldb<-read.csv('./worldbank/WDI_Data.csv', header=TRUE, comment.char="")
names(worldb)
View(head(worldb))
unique(worldb$Country.Code) #mex, bra, arg

worldb<-select(worldb, Country.Code, Indicator.Code, X2005, X2006, X2007, X2008, X2009, X2010, X2011, X2012, X2013, X2014, X2015)
##solo dejamos las variables que necesitamos

worldb<-filter(worldb, Country.Code=="ARG" | Country.Code=="MEX" | Country.Code=="BRA")
names(worldb)<-c("Country.Code", "Indicator.Code", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015")

#Indicator Codes
#SP.DYN.LE00.FE.IN=life expectancy at birth female
#SP.DYN.TFRT.IN=fertility rate
#SP.DYN.IMRT.IN=Mortality rate, infant (per 1,000 live births)
#SE.ADT.LITR.FE.ZS=Literacy rate, adult female (% of females ages 15 and above)
#SE.ADT.LITR.MA.ZS=Literacy rate, adult male (% of males ages 15 and above)
#SP.URB.TOTL.IN.ZS=Urban population (% of total)
#NY.GDP.PCAP.KD=GDP per capita (constant 2010 US$)
#SP.POP.GROW=Population growth (annual %)

worldb<-filter(worldb, Indicator.Code=="SP.POP.GROW" | Indicator.Code=="NY.GDP.PCAP.KD" | Indicator.Code=="SP.URB.TOTL.IN.ZS" | Indicator.Code=="SE.ADT.LITR.MA.ZS" | Indicator.Code=="SE.ADT.LITR.FE.ZS" | Indicator.Code=="SP.DYN.IMRT.IN" | Indicator.Code=="SP.DYN.TFRT.IN" | Indicator.Code=="SP.DYN.LE00.FE.IN")
worldb$Indicator.Code<-gsub("SP.DYN.LE00.FE.IN", "Life.Exp.Fem", worldb$Indicator.Code)
worldb$Indicator.Code<-gsub("SP.DYN.TFRT.IN", "Fert.Rate", worldb$Indicator.Code)
worldb$Indicator.Code<-gsub("SP.DYN.IMRT.IN", "Mort.Inf.Rate", worldb$Indicator.Code)
worldb$Indicator.Code<-gsub("SE.ADT.LITR.FE.ZS", "Lit.Fem", worldb$Indicator.Code)
worldb$Indicator.Code<-gsub("SE.ADT.LITR.MA.ZS", "Lit.Ma", worldb$Indicator.Code)
worldb$Indicator.Code<-gsub("SP.URB.TOTL.IN.ZS", "Urb.Pop", worldb$Indicator.Code)
worldb$Indicator.Code<-gsub("NY.GDP.PCAP.KD", "GDP.Cap", worldb$Indicator.Code)
worldb$Indicator.Code<-gsub("SP.POP.GROW", "Pop.Grow", worldb$Indicator.Code)

Dataarg<-filter(worldb, Country.Code=="ARG")
Datamex<-filter(worldb, Country.Code=="MEX")
Databra<-filter(worldb, Country.Code=="BRA")

View(Datamex)
View(Dataarg)
View(Databra)

#Las variables hombres alfabetas y muejeres alfabetas estan casi vacias en argentina, las quitamos

Dataarg<-filter(worldb, Country.Code=="ARG" & Indicator.Code!="Lit.Fem" & Indicator.Code!="Lit.Ma" )

#Quitamos el a침o 2015 para mexico y argentina, no tiene suficientes datos

Dataarg<-select(Dataarg, -13)
Datamex<-select(Datamex, -13)

#para brasil nos quedamos solo con 2006-2013, si alfabetas (hombres u mujeres)
#no son variables relevantes para el analisis regresamos 2005 y 2014
#con Databra<-filter(worldb, Country.Code=="BRA")

Databra<-select(Databra, c(-3, -12, -13))

View(Dataarg)
View(Datamex)
View(Databra)

Datamex1<-t(Datamex)
Databra1<-t(Databra)
Dataarg1<-t(Dataarg)

x<-Dataarg1[2,]
y<-Datamex1[2,]
z<-Databra1[2,]
colnames(Dataarg1)<-x
colnames(Databra1)<-z
colnames(Datamex1)<-y

Dataarg1<-Dataarg1[c(-1,-2),]
Databra1<-Databra1[c(-1,-2),]
Datamex1<-Datamex1[c(-1,-2),]

Dataarg1<-as.data.frame(Dataarg1)
Datamex1<-as.data.frame(Datamex1)
Databra1<-as.data.frame(Databra1)

indx <- sapply(Dataarg1, is.factor)
Dataarg1[indx] <- lapply(Dataarg1[indx], function(x) as.numeric(as.character(x)))

indx <- sapply(Databra1, is.factor)
Databra1[indx] <- lapply(Databra1[indx], function(x) as.numeric(as.character(x)))

indx <- sapply(Datamex1, is.factor)
Datamex1[indx] <- lapply(Datamex1[indx], function(x) as.numeric(as.character(x)))

###########arg

cor(Dataarg1,use="everything",method = "pearson")

plot(Dataarg1,pch=109, main="grafico de dispersi칩n")

modeloarg<-lm(Life.Exp.Fem~GDP.Cap+Fert.Rate+Mort.Inf.Rate+Pop.Grow+Urb.Pop,Dataarg1)

step(modelo, direction = "backward")

anova(modelo)

Dataarg1$ajus<-fitted(modelo)

Dataarg1$resi<-residuals(modelo)

Dataarg1$rstud<-rstudent(modelo)

ks.test(Dataarg1$rstud,"pnorm")

bptest(modelo, studentize = FALSE, data = Dataarg1)

dwtest(modelo, alternative = "two.sided", data = Dataarg1)


###########mex

cor(Datamex1,use="everything",method = "pearson")

plot(Datamex1,pch=109, main="grafico de dispersi칩n")

modelomex<-lm(Life.Exp.Fem~GDP.Cap+Fert.Rate+Mort.Inf.Rate+Pop.Grow+Urb.Pop+Lit.Fem+Lit.Ma,Datamex1)

step(modelomex, direction = "backward")

anova(modelomex)

Datamex1$ajus<-fitted(modelomex)

Datamex1$resi<-residuals(modelomex)

Datamex1$rstud<-rstudent(modelomex)

ks.test(Datamex1$rstud,"pnorm")

bptest(modelo, studentize = FALSE, data = Datamex1)

dwtest(modelo, alternative = "two.sided", data = Datamex1)

##########bra

cor(Databra1,use="everything",method = "pearson")

plot(Databra1,pch=109, main="grafico de dispersi칩n")

modelobra<-lm(Life.Exp.Fem~GDP.Cap+Fert.Rate+Mort.Inf.Rate+Pop.Grow+Urb.Pop+Lit.Fem+Lit.Ma,Databra1)

step(modelobra, direction = "backward")

anova(modelobra)

Databra1$ajus<-fitted(modelobra)

Databra1$resi<-residuals(modelobra)

Databra1$rstud<-rstudent(modelobra)

ks.test(Databra1$rstud,"pnorm")

bptest(modelo, studentize = FALSE, data = Databra1)

dwtest(modelo, alternative = "two.sided", data = Databra1)
